#include <SFML/Graphics.hpp>
#include <SFML/Window.hpp>

#include <steam/steam_api.h>

#include <windows.h>

util: namespace = {
  alert: (title: LPCWSTR, desc: LPCWSTR) -> int = {
    return MessageBox(nullptr, desc, title, MB_OK);
  }
}

handleKeyPressed: (inout window: sf::Window, keyPressed: sf::Event::KeyPressed) = {
  if keyPressed.code == sf::Keyboard::Key::Escape {
    window.close();
  }
}

main: () -> int = {
  std::cout << "Foo bar" << std::endl;
  errMsg: SteamErrMsg = ();
  if (SteamAPI_InitEx(errMsg&) != k_ESteamAPIInitResult_OK) {
    errStr := std::string(errMsg);
    _ = util::alert(L"Error: Steam API Initialization", std::wstring(errStr.begin(), errStr.end()).c_str());
    return EXIT_FAILURE;
  }

  window := sf::RenderWindow((), "SFML Cppfront Window", sf::State::Fullscreen);
  // SteamFriends()*.ActivateGameOverlay("friends");
  while window.isOpen() {
    SteamAPI_RunCallbacks();
    (copy maybeEvent := window.pollEvent())
    while maybeEvent
    {
      event := maybeEvent*;

      if event.is<sf::Event::Closed>() {
        window.close();
      }

      maybeKeyPressed := event.getIf<sf::Event::KeyPressed>();
      if maybeKeyPressed {
        keyPressed := maybeKeyPressed*;
        handleKeyPressed(window, keyPressed); 
      }

      maybeEvent = window.pollEvent();
    }
  }

  SteamAPI_Shutdown();
  return 0;
}